#!/usr/local/opt/ruby/bin/ruby

require_relative './helpers.rb'
require 'csv'

speakers = YAML.load(File.read('_data/speakers.yaml'))
conferences = YAML.load(File.read("./_data/conferences.yaml"))

new_speakers = []
new_conferences = []
updated_conferences = []

result =
CSV.foreach("todo.csv", headers: true).map do |entry|
  conference =
    conferences.find { |c| c['title'] == entry['conference_title'] } ||
    new_conferences.find { |c| c['title'] == entry['conference_title'] }

  conference =
    if conference
      conference
    else
      new_conference = {
        "id" => make_id(entry['conference_title']),
        "title" => entry['conference_title']
      }

      new_conferences << new_conference

      new_conference
    end

  these_speakers =
    entry['speakers'].to_s.split(",").map do |speaker_entry|
      clean_name = cleanup(speaker_entry)

      speaker =
        speakers.find { |c| c['full_name'] == clean_name } ||
        new_speakers.find { |c| c['full_name'] == clean_name }

      speaker =
        if speaker
          speaker
        else
          new_speaker = {
            "id" => make_id(clean_name),
            "full_name" => clean_name,
            "twitter" => nil,
            "github" => nil,
            "elixirforum" => nil
          }

          new_speakers << new_speaker
          new_speakers.uniq!

          new_speaker
        end
    end

  talk = {
    'video_id' => entry['video_id'],
    'talk_title' => entry['talk_title'],
    'speakers' => these_speakers.map { |speaker| speaker['id'] },
    'video_view_count' => 0,
    'video_duration_seconds' => 0,
    'conference' => conference['id']
  }

  if entry['video_platform'] == 'vimeo'
    talk['video_platform'] = 'vimeo'
  end

  talk
end

File.open('_data/speakers.yaml', 'w+') do |file|
  file.puts speakers.concat(new_speakers).sort_by { |x| x['id'] }.to_yaml
end

File.open('_data/conferences.yaml', 'w+') do |file|
  file.puts conferences.concat(new_conferences).sort_by { |x| x['id'] }.to_yaml
end

# result.group_by { |value| value['conference'] }.each do |conference, items|

# conferences + new_conferences = YAML.load(File.read("./_data/conferences.yaml"))
#
# # 1. write new speakers
#
result.group_by { |value| value['conference'] }.each do |conference, items|
  path = "./_data/#{conference}.yaml"

  if File.exists?(path)
    existing_items = YAML.load(File.read(path))
    File.open(path, 'w+') { |f| f.puts (existing_items + items).to_yaml }
  else
    File.open(path, "w+") { |file| file << items.to_yaml }
  end
end
